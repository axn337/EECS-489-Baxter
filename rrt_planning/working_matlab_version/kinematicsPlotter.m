function [ output_args ] = kinematicsPlotter(angles)
%KINEMATICSPLOTTER Summary of this function goes here
%   Detailed explanation goes here
T1 = angles(1); T2 = angles(2); T3 = angles(3);
T4 = angles(4); T5 = angles(5); T6 = angles(6);
T7 = angles(7);

twist1 = [ cos(T1), -1.0*sin(T1),   0,   0;...
sin(T1),      cos(T1),   0,   0;...
0,            0, 1.0,   0;...
0,            0,   0, 1.0];

twist2 = [ 1.0,            0,       0,                                    0;...
0,      cos(T2), sin(T2), 0.069 - 0.27*sin(T2) - 0.069*cos(T2);...
0, -1.0*sin(T2), cos(T2),  0.069*sin(T2) - 0.27*cos(T2) + 0.27;...
0,            0,       0,                                  1.0];

twist3 = [      cos(T3),   0, sin(T3),       -0.27*sin(T3);...
0, 1.0,       0,                   0;...
-1.0*sin(T3),   0, cos(T3), 0.27 - 0.27*cos(T3);...
0,   0,       0,                 1.0];

twist4 = [ 1.0,            0,       0,                                     0;...
0,      cos(T4), sin(T4), 0.433 - 0.201*sin(T4) - 0.433*cos(T4);...
0, -1.0*sin(T4), cos(T4), 0.433*sin(T4) - 0.201*cos(T4) + 0.201;...
0,            0,       0,                                   1.0];

twist5 = [      cos(T5),   0, sin(T5),        -0.201*sin(T5);...
0, 1.0,       0,                     0;...
-1.0*sin(T5),   0, cos(T5), 0.201 - 0.201*cos(T5);...
0,   0,       0,                   1.0];...

twist6 = [ 1.0,            0,       0,                                     0;...
0,      cos(T6), sin(T6), 0.808 - 0.191*sin(T6) - 0.808*cos(T6);...
0, -1.0*sin(T6), cos(T6), 0.808*sin(T6) - 0.191*cos(T6) + 0.191;...
0,            0,       0,                                   1.0];

twist7 = [      cos(T7),   0, sin(T7),        -0.191*sin(T7);...
0, 1.0,       0,                     0;...
-1.0*sin(T7),   0, cos(T7), 0.191 - 0.191*cos(T7);...
0,   0,       0,                   1.0];

figure(1)
q{1} = [0;0;0;1];
q{2} = [0;0.069;0.27;1];
q{3} = [0;0.4330;0.2010;1];
q{4} = [0;0.8080;0.1910;1];
q{5} = [0;1.0880;0.1910;1];

q{2} = twist1*q{2};
q{3} = twist1*twist2*twist3*q{3};
q{4} = twist1*twist2*twist3*twist4*twist5*twist6*q{4};
q{5} = twist1*twist2*twist3*twist4*twist5*twist6*twist7*q{5};

for index = 1:length(q)
    q_matrix(index,:) = q{index}(1:3)';
end
grid on
hold on
pbaspect([1 1 1])
plot3(q_matrix(:,1),q_matrix(:,2),q_matrix(:,3),'-ko')
xlabel('X')
ylabel('Y')
zlabel('Z')
% h = get(gca,'DataAspectRatio') 
% if h(3)==1
%       set(gca,'DataAspectRatio',[1 1 1])
% else
%       set(gca,'DataAspectRatio',[1 1 1])
% end
end

